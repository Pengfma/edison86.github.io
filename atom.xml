<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Edison的部落格</title>
  <subtitle>Edison的部落格</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://edison86.github.io/"/>
  <updated>2016-08-26T15:21:39.313Z</updated>
  <id>http://edison86.github.io/</id>
  
  <author>
    <name>Edison</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS3兄弟选择器实现导航条分隔线</title>
    <link href="http://edison86.github.io/2016/08/26/%E5%AF%BC%E8%88%AA%E6%9D%A1%E5%88%86%E9%9A%94%E7%BA%BF/"/>
    <id>http://edison86.github.io/2016/08/26/导航条分隔线/</id>
    <published>2016-08-26T15:17:53.992Z</published>
    <updated>2016-08-26T15:21:39.313Z</updated>
    
    <content type="html"><![CDATA[<p>页面布局中，经常会看到一排元素用一条竖线分隔，如导航条的分隔线。下图为天猫商城首页的导航条效果:<br><img src="http://i.imgur.com/sJCXfmP.png" alt=""></p>
<h3 id="天猫商城实现原理"><a href="#天猫商城实现原理" class="headerlink" title="天猫商城实现原理"></a>天猫商城实现原理</h3><p>查看天猫商城首页的导航条源代码如下：也就是让每一个li都有一个左边框，然后通过设置margin-left: -13px;让ul溢出后隐藏第一个li的左边框。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span>&#123;</div><div class="line">     <span class="attribute">height</span>: <span class="number">18px</span>;</div><div class="line">     <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">     <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">     <span class="attribute">margin-left</span>: -<span class="number">13px</span>;</div><div class="line">     <span class="attribute">overflow</span>: hidden;</div><div class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">li</span>&#123;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1.1</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">12px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS3兄弟选择器实现原理"><a href="#CSS3兄弟选择器实现原理" class="headerlink" title="CSS3兄弟选择器实现原理"></a>CSS3兄弟选择器实现原理</h3><p>让第一个li后面的li都加一个左边框。代码如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span>&#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">18px</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#148CCA</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</div><div class="line">    <span class="attribute">float</span>: left;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1.1</span>;</div><div class="line">    <span class="attribute">padding</span>:<span class="number">0</span>  <span class="number">12px</span> ;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>+<span class="selector-tag">li</span>&#123;  </div><div class="line">   <span class="attribute">border-left</span>: <span class="number">1px</span> solid ;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;页面布局中，经常会看到一排元素用一条竖线分隔，如导航条的分隔线。下图为天猫商城首页的导航条效果:&lt;br&gt;&lt;img src=&quot;http://i.imgur.com/sJCXfmP.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;天猫商城实现原理&quot;&gt;&lt;a href=&quot;#天猫商
    
    </summary>
    
      <category term="CSS" scheme="http://edison86.github.io/categories/CSS/"/>
    
    
      <category term="选择器" scheme="http://edison86.github.io/tags/%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>水平排列li元素之间的空白去除</title>
    <link href="http://edison86.github.io/2016/08/26/%E6%B0%B4%E5%B9%B3%E6%8E%92%E5%88%97li%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E7%A9%BA%E7%99%BD%E5%8E%BB%E9%99%A4/"/>
    <id>http://edison86.github.io/2016/08/26/水平排列li元素之间的空白去除/</id>
    <published>2016-08-26T12:27:56.934Z</published>
    <updated>2016-08-26T13:41:27.995Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>页面布局中，有时候我们需要将li元素水平排列，如导航条的水平排列。当设置li元素display：inline-block时，两个li元素之间会有一个空隙。如下所示:<br>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>&gt;</span>男装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li3"</span>&gt;</span>女装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">li</span>&#123; <span class="attribute">margin</span>: <span class="number">0</span>;  <span class="attribute">display</span>: inline-block;  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">5px</span>; &#125;</div><div class="line"><span class="selector-id">#li1</span>&#123; <span class="attribute">background-color</span>: <span class="number">#7740ff</span>; &#125;</div><div class="line"><span class="selector-id">#li2</span>&#123; <span class="attribute">background-color</span>: <span class="number">#ff2177</span>; &#125;</div><div class="line"><span class="selector-id">#li3</span>&#123; <span class="attribute">background-color</span>: <span class="number">#47ff3e</span>; &#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://i.imgur.com/Hk0CEyB.png" alt=""></p>
<h3 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h3><p>浏览器有一个默认行为，会把inline元素之间的空白字符渲染成一个空格。<br>上面代码中的 li 标签在换行后会产生换行字符，浏览器会将其渲染成一个空格。</p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>方法一：既然空格是由于 li 换行产生的，那就可以将 li 代码写在一排。但是如果太多的 li 代码写在一行的话，代码就不够直观。如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>&gt;</span>男装<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li3"</span>&gt;</span>女装<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li3"</span>&gt;</span>男鞋<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li3"</span>&gt;</span>女鞋<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>方法二： 先给ul设置font-size:0 以便消除空格，再给li重新设置font-size。<br>方法三： 可以将li标签不闭合，浏览器在解析的过程中会自动补全。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>&gt;</span>首页</div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li2"</span>&gt;</span>男装</div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li3"</span>&gt;</span>女装</div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h3&gt;&lt;p&gt;页面布局中，有时候我们需要将li元素水平排列，如导航条的水平排列。当设置li元素display：inline-blo
    
    </summary>
    
      <category term="HTML" scheme="http://edison86.github.io/categories/HTML/"/>
    
    
      <category term="li" scheme="http://edison86.github.io/tags/li/"/>
    
  </entry>
  
  <entry>
    <title>绝对定位元素水平垂直居中</title>
    <link href="http://edison86.github.io/2016/08/25/%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://edison86.github.io/2016/08/25/绝对定位元素水平垂直居中/</id>
    <published>2016-08-25T12:17:05.531Z</published>
    <updated>2016-08-25T13:47:04.007Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法1（兼容IE8-）："><a href="#方法1（兼容IE8-）：" class="headerlink" title="方法1（兼容IE8+）："></a>方法1（兼容IE8+）：</h3><p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent</span>&#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>; <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#child</span>&#123;		    </div><div class="line">    <span class="attribute">width</span>: <span class="number">100px</span>; <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;<span class="attribute">top</span>: <span class="number">0</span>; <span class="attribute">left</span>: <span class="number">0</span>; <span class="attribute">right</span>: <span class="number">0</span>; <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="扩展：（绝对定位元素内的文字水平垂直居中）"><a href="#扩展：（绝对定位元素内的文字水平垂直居中）" class="headerlink" title="扩展：（绝对定位元素内的文字水平垂直居中）"></a>扩展：（绝对定位元素内的文字水平垂直居中）</h3><p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span>文字水平垂直居中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent</span>&#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#148CCA</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-id">#child</span>&#123;		    </div><div class="line">    <span class="attribute">width</span>: <span class="number">80px</span>; <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;<span class="attribute">top</span>: <span class="number">0</span>; <span class="attribute">left</span>: <span class="number">0</span>; <span class="attribute">right</span>: <span class="number">0</span>; <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#ed58ff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h6 id="如下图所示："><a href="#如下图所示：" class="headerlink" title="如下图所示："></a>如下图所示：</h6><p><img src="http://i.imgur.com/FpV5zNp.png" alt=""></p>
<h3 id="方法2（兼容IE9-）："><a href="#方法2（兼容IE9-）：" class="headerlink" title="方法2（兼容IE9+）："></a>方法2（兼容IE9+）：</h3><p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"child"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#parent</span>&#123;</div><div class="line">          <span class="attribute">width</span>: <span class="number">500px</span>;  <span class="attribute">height</span>: <span class="number">300px</span>;</div><div class="line">          <span class="attribute">position</span>: relative;</div><div class="line">      &#125;</div><div class="line">      <span class="selector-id">#child</span>&#123;</div><div class="line">          <span class="attribute">width</span>: <span class="number">100px</span>;  <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">          <span class="attribute">position</span>: absolute;  <span class="attribute">top</span>: <span class="number">50%</span>;  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">          <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">          <span class="attribute">-moz-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">          <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">          <span class="attribute">-o-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">          <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;方法1（兼容IE8-）：&quot;&gt;&lt;a href=&quot;#方法1（兼容IE8-）：&quot; class=&quot;headerlink&quot; title=&quot;方法1（兼容IE8+）：&quot;&gt;&lt;/a&gt;方法1（兼容IE8+）：&lt;/h3&gt;&lt;p&gt;html&lt;br&gt;&lt;figure class=&quot;highlig
    
    </summary>
    
      <category term="CSS" scheme="http://edison86.github.io/categories/CSS/"/>
    
    
      <category term="居中" scheme="http://edison86.github.io/tags/%E5%B1%85%E4%B8%AD/"/>
    
  </entry>
  
  <entry>
    <title>JS数组去重</title>
    <link href="http://edison86.github.io/2016/08/21/js%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/"/>
    <id>http://edison86.github.io/2016/08/21/js数组去重/</id>
    <published>2016-08-21T11:47:44.605Z</published>
    <updated>2016-08-22T07:26:12.151Z</updated>
    
    <content type="html"><![CDATA[<p>今天学习es6，学到了一个简单高效又没有bug的js去重方法，现在整理一下几种数组去重的方法，并对这几种方法做一个比较。</p>
<h3 id="方法1（效率不高）："><a href="#方法1（效率不高）：" class="headerlink" title="方法1（效率不高）："></a>方法1（效率不高）：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.unique1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> res = []; <span class="comment">//创建一个新的临时数组</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len=<span class="keyword">this</span>.length; i &lt; len; i++) &#123;</div><div class="line">        <span class="comment">//如果临时数组有当前项，则跳过；没有则添加到临时数组。</span></div><div class="line">        <span class="keyword">if</span> (res.indexOf(<span class="keyword">this</span>[i]) == <span class="number">-1</span>)&#123;</div><div class="line">            res.push(<span class="keyword">this</span>[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="string">'1'</span>,<span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>,<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(arr.unique1())</div></pre></td></tr></table></figure>
<h3 id="方法2（有局限性）："><a href="#方法2（有局限性）：" class="headerlink" title="方法2（有局限性）："></a>方法2（有局限性）：</h3><p>注：由于得到的数组是排序后的数组，所以有一定的局限性。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.unique2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.sort(); <span class="comment">// 将数组排序</span></div><div class="line">    <span class="keyword">var</span> res = [<span class="keyword">this</span>[<span class="number">0</span>]]; <span class="comment">//创建一个新的临时数组</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len=<span class="keyword">this</span>.length; i &lt; len; i++) &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>[i]!==res[res.length<span class="number">-1</span>])&#123;</div><div class="line">            res.push(<span class="keyword">this</span>[i])</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="string">'1'</span>,<span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>,<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(arr.unique2())</div></pre></td></tr></table></figure></p>
<h3 id="方法3（有bug）："><a href="#方法3（有bug）：" class="headerlink" title="方法3（有bug）："></a>方法3（有bug）：</h3><p>注：会将字符’1’强制类型转换为数字1<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.unique3 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> res = []; <span class="comment">//创建一个空的临时数组</span></div><div class="line">    <span class="keyword">var</span> json = &#123;&#125;; <span class="comment">//创建一个空对象</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>,len=<span class="keyword">this</span>.length; i &lt; len; i++) &#123;</div><div class="line">        <span class="comment">//将数组元素与对象中的属性对比，</span></div><div class="line">        <span class="comment">//如果对象中有此属性，则跳过；如果没有此属性，将此元素添加到临时数组中，</span></div><div class="line">        <span class="comment">//同时将此元素作为对象的一个属性，并赋值为1，添加到对象中。</span></div><div class="line">        <span class="keyword">if</span> (!json[<span class="keyword">this</span>[i]])&#123;</div><div class="line">            res.push(<span class="keyword">this</span>[i]);</div><div class="line">		    json[<span class="keyword">this</span>[i]]=<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> res;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="string">'1'</span>,<span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>,<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(arr.unique3())</div></pre></td></tr></table></figure></p>
<h3 id="方法4（推荐）："><a href="#方法4（推荐）：" class="headerlink" title="方法4（推荐）："></a>方法4（推荐）：</h3><p>注：利用es6中的set数据结构和Array.from()方法，简单高效没有bug！<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.unique4 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> set = <span class="keyword">new</span> <span class="built_in">Set</span>(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Array</span>.from(set);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">1</span>,<span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>,<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="number">2</span>, <span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(arr.unique4())</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天学习es6，学到了一个简单高效又没有bug的js去重方法，现在整理一下几种数组去重的方法，并对这几种方法做一个比较。&lt;/p&gt;
&lt;h3 id=&quot;方法1（效率不高）：&quot;&gt;&lt;a href=&quot;#方法1（效率不高）：&quot; class=&quot;headerlink&quot; title=&quot;方法1（
    
    </summary>
    
      <category term="JS" scheme="http://edison86.github.io/categories/JS/"/>
    
    
      <category term="数组" scheme="http://edison86.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
</feed>
